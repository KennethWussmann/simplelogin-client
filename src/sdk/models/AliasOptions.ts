/* eslint-disable */
// @ts-nocheck
type RequestCredentials = any;
type Response = any;
type RequestInit = any;
type FormData = any;
type WindowOrWorkerGlobalScope = any;
/* tslint:disable */
/* eslint-disable */
/**
 * SimpleLogin (unofficial)
 * The unofficial SimpleLogin API docs as OpenAPI 3.0.0 spec. This is based on the official markdown based docs, but written in OpenAPI to allow for easier integration with other tools and generation of client SDKs. Please do not contact the SimpleLogin team for support or issues with this API documentation.
 *
 * The version of the OpenAPI document: 4.22.0
 * Contact: contact@ketrwu.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AliasOptionsRecommendationInner } from './AliasOptionsRecommendationInner';
import {
    AliasOptionsRecommendationInnerFromJSON,
    AliasOptionsRecommendationInnerFromJSONTyped,
    AliasOptionsRecommendationInnerToJSON,
} from './AliasOptionsRecommendationInner';
import type { AliasOptionsSuffixesInner } from './AliasOptionsSuffixesInner';
import {
    AliasOptionsSuffixesInnerFromJSON,
    AliasOptionsSuffixesInnerFromJSONTyped,
    AliasOptionsSuffixesInnerToJSON,
} from './AliasOptionsSuffixesInner';

/**
 * 
 * @export
 * @interface AliasOptions
 */
export interface AliasOptions {
    /**
     * Whether the user can create an alias or not
     * @type {boolean}
     * @memberof AliasOptions
     */
    canCreate: boolean;
    /**
     * 
     * @type {string}
     * @memberof AliasOptions
     */
    prefixSuggestion: string;
    /**
     * 
     * @type {Array<AliasOptionsSuffixesInner>}
     * @memberof AliasOptions
     */
    suffixes: Array<AliasOptionsSuffixesInner>;
    /**
     * 
     * @type {Array<AliasOptionsRecommendationInner>}
     * @memberof AliasOptions
     */
    recommendation?: Array<AliasOptionsRecommendationInner>;
}

/**
 * Check if a given object implements the AliasOptions interface.
 */
export function instanceOfAliasOptions(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "canCreate" in value;
    isInstance = isInstance && "prefixSuggestion" in value;
    isInstance = isInstance && "suffixes" in value;

    return isInstance;
}

export function AliasOptionsFromJSON(json: any): AliasOptions {
    return AliasOptionsFromJSONTyped(json, false);
}

export function AliasOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AliasOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'canCreate': json['can_create'],
        'prefixSuggestion': json['prefix_suggestion'],
        'suffixes': ((json['suffixes'] as Array<any>).map(AliasOptionsSuffixesInnerFromJSON)),
        'recommendation': !exists(json, 'recommendation') ? undefined : ((json['recommendation'] as Array<any>).map(AliasOptionsRecommendationInnerFromJSON)),
    };
}

export function AliasOptionsToJSON(value?: AliasOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'can_create': value.canCreate,
        'prefix_suggestion': value.prefixSuggestion,
        'suffixes': ((value.suffixes as Array<any>).map(AliasOptionsSuffixesInnerToJSON)),
        'recommendation': value.recommendation === undefined ? undefined : ((value.recommendation as Array<any>).map(AliasOptionsRecommendationInnerToJSON)),
    };
}

