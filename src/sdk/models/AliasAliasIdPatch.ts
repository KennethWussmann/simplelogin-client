/* eslint-disable */
// @ts-nocheck
type RequestCredentials = any;
type Response = any;
type RequestInit = any;
type FormData = any;
type WindowOrWorkerGlobalScope = any;
/* tslint:disable */
/* eslint-disable */
/**
 * SimpleLogin (unofficial)
 * The unofficial SimpleLogin API docs as OpenAPI 3.0.0 spec. This is based on the official markdown based docs, but written in OpenAPI to allow for easier integration with other tools and generation of client SDKs. Please do not contact the SimpleLogin team for support or issues with this API documentation.
 *
 * The version of the OpenAPI document: 4.22.0
 * Contact: contact@ketrwu.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AliasAliasIdPatch
 */
export interface AliasAliasIdPatch {
    /**
     * 
     * @type {string}
     * @memberof AliasAliasIdPatch
     */
    note?: string;
    /**
     * 
     * @type {number}
     * @memberof AliasAliasIdPatch
     */
    mailboxId?: number;
    /**
     * 
     * @type {string}
     * @memberof AliasAliasIdPatch
     */
    name?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof AliasAliasIdPatch
     */
    mailboxIds?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof AliasAliasIdPatch
     */
    disablePgp?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AliasAliasIdPatch
     */
    pinned?: boolean;
}

/**
 * Check if a given object implements the AliasAliasIdPatch interface.
 */
export function instanceOfAliasAliasIdPatch(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AliasAliasIdPatchFromJSON(json: any): AliasAliasIdPatch {
    return AliasAliasIdPatchFromJSONTyped(json, false);
}

export function AliasAliasIdPatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): AliasAliasIdPatch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'note': !exists(json, 'note') ? undefined : json['note'],
        'mailboxId': !exists(json, 'mailbox_id') ? undefined : json['mailbox_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'mailboxIds': !exists(json, 'mailbox_ids') ? undefined : json['mailbox_ids'],
        'disablePgp': !exists(json, 'disable_pgp') ? undefined : json['disable_pgp'],
        'pinned': !exists(json, 'pinned') ? undefined : json['pinned'],
    };
}

export function AliasAliasIdPatchToJSON(value?: AliasAliasIdPatch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'note': value.note,
        'mailbox_id': value.mailboxId,
        'name': value.name,
        'mailbox_ids': value.mailboxIds,
        'disable_pgp': value.disablePgp,
        'pinned': value.pinned,
    };
}

