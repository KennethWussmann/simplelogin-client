/* eslint-disable */
// @ts-nocheck
type RequestCredentials = any;
type Response = any;
type RequestInit = any;
type FormData = any;
type WindowOrWorkerGlobalScope = any;
/* tslint:disable */
/* eslint-disable */
/**
 * SimpleLogin (unofficial)
 * The unofficial SimpleLogin API docs as OpenAPI 3.0.0 spec. This is based on the official markdown based docs, but written in OpenAPI to allow for easier integration with other tools and generation of client SDKs. Please do not contact the SimpleLogin team for support or issues with this API documentation.
 *
 * The version of the OpenAPI document: 4.22.0
 * Contact: contact@ketrwu.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AliasCustomNewPost
 */
export interface AliasCustomNewPost {
    /**
     * The first part of the alias that user can choose.
     * @type {string}
     * @memberof AliasCustomNewPost
     */
    aliasPrefix: string;
    /**
     * One of the suffixes returned in the options endpoint.
     * @type {string}
     * @memberof AliasCustomNewPost
     */
    signedSuffix: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof AliasCustomNewPost
     */
    mailboxIds: Array<number>;
    /**
     * Note of this alias
     * @type {string}
     * @memberof AliasCustomNewPost
     */
    note?: string;
    /**
     * Name of this alias
     * @type {string}
     * @memberof AliasCustomNewPost
     */
    name?: string;
}

/**
 * Check if a given object implements the AliasCustomNewPost interface.
 */
export function instanceOfAliasCustomNewPost(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "aliasPrefix" in value;
    isInstance = isInstance && "signedSuffix" in value;
    isInstance = isInstance && "mailboxIds" in value;

    return isInstance;
}

export function AliasCustomNewPostFromJSON(json: any): AliasCustomNewPost {
    return AliasCustomNewPostFromJSONTyped(json, false);
}

export function AliasCustomNewPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): AliasCustomNewPost {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aliasPrefix': json['alias_prefix'],
        'signedSuffix': json['signed_suffix'],
        'mailboxIds': json['mailbox_ids'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function AliasCustomNewPostToJSON(value?: AliasCustomNewPost | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias_prefix': value.aliasPrefix,
        'signed_suffix': value.signedSuffix,
        'mailbox_ids': value.mailboxIds,
        'note': value.note,
        'name': value.name,
    };
}

